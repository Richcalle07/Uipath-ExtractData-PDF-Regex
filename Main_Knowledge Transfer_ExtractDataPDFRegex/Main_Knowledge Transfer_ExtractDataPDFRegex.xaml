<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_PathPDFs="AllInvoices" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_PathPDFs" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1416,1233</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main_Knowledge Transfer_ExtractDataPDFRegex" sap:VirtualizedContainerService.HintSize="376,1168" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PDFToTxt" />
      <Variable x:TypeArguments="x:String" Name="LineItem" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="IndexLine" />
      <Variable x:TypeArguments="x:String" Name="ValueDate" />
      <Variable x:TypeArguments="x:String" Name="OrderedQtyOf_TableSageX3" />
      <Variable x:TypeArguments="x:String" Name="CustomerProductNumOf_TableSageX3" />
      <Variable x:TypeArguments="x:String" Name="Extended" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Message="[&quot;Starting | Main_Knowledge Transfer_ExtractDataPDFRegex&quot;]" />
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="PARA CADA FACTURA EN LA RUTA&#xA;&#xA;Directory.GetFiles(in_PathPDFs)&#xA;&#xA;in_PathPDFs = &quot;C:\Users\richard.calle\OneDrive - Revemy LLC\Desktop\Sample PO\AllInvoices&quot;&#xD;&#xA;&#xD;&#xA;&quot;AllInvoices&quot;" DisplayName="For Each PO" sap:VirtualizedContainerService.HintSize="334,814" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(in_PathPDFs)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="File" />
          </ActivityAction.Argument>
          <Sequence DisplayName="File PDF" sap:VirtualizedContainerService.HintSize="242,548" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Object" Name="TotalPrice" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ListExt" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Read PDF" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage sap2010:Annotation.AnnotationText="Name PO PDF" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="LogMessage_14" Message="[&quot;-&quot;+vbCrLf+&quot;PurchaseOrder:&quot; +File.ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:ReadPDFText PreserveFormatting="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="Read PDF Text" FileName="[File.ToString]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[PDFToTxt]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadPDFText>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Warn" Message="[PDFToTxt]" />
            </Sequence>
            <Sequence DisplayName="Create LineItem" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign IndexLine" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[IndexLine]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Create LineItem" DisplayName="Assign LineItem" sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[LineItem]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["000"+IndexLine.ToString+"0"]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
            </Sequence>
            <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="validate if the LineItem that we just built exists in the PDF...&#xA;&#xA;Validar Si el Item Existe..." DisplayName="While  LineItem Exist" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
              <ui:InterruptibleWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:String[]" Name="ArrayLineItem" />
                    <Variable x:TypeArguments="x:String" Name="MaterialNumberOf_Pdf" />
                    <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ResultRegex" />
                    <Variable x:TypeArguments="x:Int32" Name="NumCaracterOrderedQuantity" />
                    <Variable x:TypeArguments="x:String" Name="OrderedQuantityOf_PDF" />
                    <Variable x:TypeArguments="x:String" Name="DueDateToPDF" />
                    <Variable x:TypeArguments="x:String" Name="PriceLine" />
                    <Variable x:TypeArguments="x:Int32" Name="NumCaracterPriceLine" />
                    <Variable x:TypeArguments="x:String" Name="StringLineItem" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign MaterialNumber" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[MaterialNumberOf_Pdf]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Split(PDFToTxt.ToString, LineItem)(1).Substring(0, 9)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),&quot;\s[0-9]\s\s&quot;)(0).Count&#xA;&#xA;Buscar la posicion para Quantity&#xA;solo en en LineItem" DisplayName="Assign NumCaracterOrderedQuantity" sap:VirtualizedContainerService.HintSize="262,162" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[NumCaracterOrderedQuantity]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),"\b[0-9]*[0-9]*\b\s\s[A-Z]")(0).Count]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),&quot;\s[0-9]\s\s&quot;)(1).Count&#xA;&#xA;Buscar la posicion para Price&#xA;solo en en LineItem" DisplayName="Assign NumCaracterPriceLine" sap:VirtualizedContainerService.HintSize="262,162" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[NumCaracterPriceLine]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),"\b[0-9]*[0-9]*\b\s\s[A-Z]")(1).Count]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),&quot;\b[0-9]*[0-9]*\b\s\s[A-Z]&quot;)(0).Substring(NumCaracterOrderedQuantity-6,6 ).Replace(&quot; &quot;,&quot;&quot;)&#xA;&#xA;solo en en LineItem&#xA;NumCaracterOrderedQuantity&#xA;hacia atras&#xA;sin espacios&#xA;" DisplayName="Assign OrderedQuanty" sap:VirtualizedContainerService.HintSize="262,252" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[OrderedQuantityOf_PDF]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),"\b[0-9]*[0-9]*\b\s\s[A-Z]")(0).Substring(NumCaracterOrderedQuantity-6,6 ).Replace(" ","")]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),&quot;\b[0-9]*[0-9]*\b\s\s[A-Z]&quot;)(1).Substring(NumCaracterPriceLine-13,13 ).Replace(&quot; &quot;,&quot;&quot;)&#xA;&#xA;solo en en LineItem&#xA;NumCaracterPriceLine&#xA;hacia atras&#xA;sin espacios&#xA;" DisplayName="Assign Price" sap:VirtualizedContainerService.HintSize="262,252" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[PriceLine]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),"\b[0-9]*[0-9]*\b\s\s[A-Z]")(1).Substring(NumCaracterPriceLine-13,13 ).Replace(" ","")]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="(System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),&quot;[A-Z][\s]([0-9])\w/([0-9])\w/([0-9])\w([0-9])\w&quot;)(5).Replace(&quot; &quot;,&quot;&quot;)).Split(CChar(vblf))(0)&#xA;&#xA;solo en en LineItem&#xA;Posicion de la fecha&#xA;Posicion 5&#xA;primera Item del Array 1&#xA;sin espacios&#xA;&#xA;&#xA;" DisplayName="Assign Extended" sap:VirtualizedContainerService.HintSize="262,282" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Extended]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[(System.Text.RegularExpressions.Regex.Split(Split(PDFToTxt.ToString, LineItem)(1),"[A-Z][\s]([0-9])\w/([0-9])\w/([0-9])\w([0-9])\w")(5).Replace(" ","")).Split(CChar(vblf))(0)]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Sequence sap2010:Annotation.AnnotationText="([0-9])\w/([0-9])\w/([0-9])\w([0-9])\w&#xA;&#xA;03/23/2021&#xA;&#xA;&#xA;Extended&#xA; (USD)&#xA;&#xA;&#xA;LineItem" DisplayName="Get DueDate Using Regex Expresion" sap:VirtualizedContainerService.HintSize="262,243" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ListAllDate" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Matches DisplayName="Matches Regex" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[Split(PDFToTxt.ToString, LineItem)(1)]" IsBuilderTabModified="False" Pattern="([0-9])\w/([0-9])\w/([0-9])\w([0-9])\w" RegexOption="IgnoreCase, Compiled" Result="[ListAllDate]" />
                    <Assign sap2010:Annotation.AnnotationText="([0-9])\w/([0-9])\w/([0-9])\w([0-9])\w&#xA;&#xA;&#xA;Devuele una lista&#xA;la primera posiscion &#xA;&#xA;ListAllDate(CInt(LineItem)-1).value" DisplayName="Assign DueDate" sap:VirtualizedContainerService.HintSize="334,177" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[DueDateToPDF]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[ListAllDate(0).value]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                  <ui:LogMessage sap2010:Annotation.AnnotationText="Print Results&#xA;&#xA;&#xA;&quot;LineItem: &quot; +LineItem&#xA;&quot;MaterialNumber PDF:&quot; +MaterialNumberOf_Pdf &#xA;&quot;OrderedQuantity PDF: &quot; + OrderedQuantityOf_PDF&#xA;&quot;PriceLine: &quot; +PriceLine &#xA;&quot;DueDate: &quot; + DueDateToPDF&#xA;&quot;Extended: &quot; +Extended&#xA;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="262,243" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;-&quot;+ vbCrLf+&#xA;&quot;LineItem: &quot; +LineItem + vbCrLf+&#xA;&quot;MaterialNumber PDF:&quot; +MaterialNumberOf_Pdf + vbCrLf+&#xA;&quot;OrderedQuantity PDF: &quot; + OrderedQuantityOf_PDF + vbCrLf+&#xA;&quot;PriceLine: &quot; +PriceLine + vbCrLf+&#xA;&quot;DueDate: &quot; + DueDateToPDF+ vbCrLf+&#xA;&quot;Extended: &quot; +Extended+ vbCrLf+&#xA;&quot;-&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <Sequence DisplayName="Increment LineItem IndexLine" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[IndexLine]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[IndexLine + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="00010" DisplayName="Assign LineItem" sap:VirtualizedContainerService.HintSize="262,91" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[LineItem]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["000"+IndexLine.ToString+"0"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </Sequence>
              </ui:InterruptibleWhile.Body>
              <ui:InterruptibleWhile.Condition>
                <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="PDFToTxt.Contains(LineItem)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
              </ui:InterruptibleWhile.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleWhile>
            <Sequence DisplayName="TotalPrice" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap2010:Annotation.AnnotationText="" DisplayName="Assign TotalPrice" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[TotalPrice]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split(PDFToTxt.ToString, "TOTAL(USD)")(1).Replace(" ","").Replace("Notes:", "")]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;TotalPrice:&quot; + TotalPrice.ToString]" />
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Message="[&quot;Ending | Main_Knowledge Transfer_ExtractDataPDFRegex&quot;]" />
  </Sequence>
</Activity>